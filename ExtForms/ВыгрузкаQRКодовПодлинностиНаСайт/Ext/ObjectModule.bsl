
#Область ОписаниеПеременных

Перем Сервер;
Перем ПользовательСервера;
Перем ПарольСервера;
Перем БазаСервера;
Перем Год;
Перем ТекущийПериод;
Перем ПредыдущийПериод;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ЧтениеЗаписейТаблицы(Соединение, ИмяТаблицы, ПоляТаблицы) Экспорт
	
	ПрочитанныеДанные = Новый ТаблицаЗначений;
	
	Для Каждого Элемент Из ПоляТаблицы Цикл
		ПрочитанныеДанные.Колонки.Добавить(Элемент, Новый ОписаниеТипов("Строка"), Элемент);
	КонецЦикла;	
	
	Попытка
		
		RS = Новый COMОбъект("ADODB.Recordset");
		RS.CursorType = 3;
		
		RS.ActiveConnection = Соединение;
		СтрокаЗапроса = СтрокаЗапросаЧтение(ИмяТаблицы);
		RS.Open(СтрокаЗапроса);
		RS.MoveFirst();
		
		Пока RS.EOF()=0 Цикл
			СтрокаДанные = ПрочитанныеДанные.Добавить();
			Для Каждого Элемент Из ПоляТаблицы Цикл
				СтрокаДанные[Элемент] = RS.Fields(Элемент).Value;
			КонецЦикла;
			RS.MoveNext();
		КонецЦикла;
		
		RS.Close();
		
	Исключение
		
		ВызватьИсключение ОписаниеОшибки();
		
	КонецПопытки;
	
	Возврат ПрочитанныеДанные;
	
КонецФункции

Процедура ЗаписьДанныхВТаблицуНаСервере(Соединение, ИмяТаблицы, Строка) Экспорт
	
	Попытка
		
		СтрокаЗапроса = СтрокаЗапросаЗапись(Строка);
		
		Command= new COMObject("ADODB.Command");
		Command.CommandText = СтрокаЗапроса;
		Command.ActiveConnection = Соединение;
		Command.CommandType = 1;
		Command.Execute();
		
	Исключение
		
		ВызватьИсключение ОписаниеОшибки();
		
	КонецПопытки;
	
КонецПроцедуры	

Процедура ВыгрузитьШтрихкодыПодлинностиВБазу(Соединение, ИмяТаблицы, ДанныеССайта) Экспорт
	
	ДанныеДляВыгрузки = ДанныеДляВыгрузки(ДанныеССайта);
	
	Для Каждого Строка Из ДанныеДляВыгрузки Цикл
		ЗаписьДанныхВТаблицуНаСервере(Соединение, ИмяТаблицы, Строка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыСоединения() Экспорт
	
	СоединениеПараметры = "driver={MySQL ODBC 8.4 Unicode Driver}; server=" 
	+ СокрЛП(Сервер)
	+ "; uid="
	+ СокрЛП(ПользовательСервера)
	+ "; pwd="+СокрЛП(ПарольСервера)
	+ "; database="
	+ СокрЛП(БазаСервера)
	+ "; STMT=SET CHARACTER SET utf8"
	;
	
	Возврат СоединениеПараметры;
	
КонецФункции

Функция НовоеСоединение(СоединениеПараметры) Экспорт
	
	Попытка
		
		Соединение = Новый COMОбъект("ADODB.Connection");
		Соединение.open(СоединениеПараметры);
		СоединениеУстановлено = Истина;
		Возврат Соединение;
		
	Исключение
		
		ТекстСообщения = "" + ТекущаяДата() + " Connection error: " + ОписаниеОшибки();
		СоединениеУстановлено = Ложь;
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
КонецФункции

Функция ПоляТаблицы() Экспорт
	
	ПоляТаблицы = Новый Массив;
	ПоляТаблицы.Добавить("qrValue");
	
	Возврат ПоляТаблицы;
	
КонецФункции

Процедура ЗакрытьСоединение(Соединение) Экспорт
	
	Соединение.Close();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляВыгрузки(ДанныеССайта)
	
	Период = Новый Массив;
	Период.Добавить(ТекущийПериод);
	Период.Добавить(ПредыдущийПериод);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросШтрихкодыПодлинностиДляВыгрузки();
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ДанныеССайта", ДанныеССайта);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТекстЗапросШтрихкодыПодлинностиДляВыгрузки()
	
	Возврат
	"ВЫБРАТЬ
	|	ПОДСТРОКА(ДанныеССайта.qrValue, 0, 8) КАК qrValue
	|ПОМЕСТИТЬ ДанныеССайта
	|ИЗ
	|	&ДанныеССайта КАК ДанныеССайта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	qrValue
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры,
	|	сибиарQRКодПодлинностьПродукции.ШтрихкодПодленности КАК ШтрихкодПодленности,
	|	ПОДСТРОКА(Номенклатура.НаименованиеПолное, 0, 250) КАК НаименованиеПолное,
	|	ПОДСТРОКА(сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры, 26, 6) КАК ДатаПроизводства
	|ПОМЕСТИТЬ ДанныеСБазы
	|ИЗ
	|	ДанныеССайта КАК ДанныеССайта,
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО Штрихкоды.Владелец = Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сибиарQRКодПодлинностьПродукции КАК сибиарQRКодПодлинностьПродукции
	|		ПО (сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры = Штрихкоды.Штрихкод)
	|ГДЕ
	|	ПОДСТРОКА(сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры, 26, 6) В (&Период)
	|	И сибиарQRКодПодлинностьПродукции.Использовано = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	сибиарQRКодПодлинностьПродукции.ШтрихкодПодленности,
	|	ПОДСТРОКА(Номенклатура.НаименованиеПолное, 0, 250),
	|	сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры,
	|	ПОДСТРОКА(сибиарQRКодПодлинностьПродукции.ШтрихкодНоменклатуры, 26, 6)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ШтрихкодПодленности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСБазы.НаименованиеПолное,
	|	ДанныеСБазы.ШтрихкодНоменклатуры,
	|	ДанныеСБазы.ШтрихкодПодленности,
	|	ДанныеСБазы.ДатаПроизводства,
	|	ДанныеССайта.qrValue
	|ПОМЕСТИТЬ ДанныеСоединенные
	|ИЗ
	|	ДанныеСБазы КАК ДанныеСБазы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеССайта КАК ДанныеССайта
	|		ПО (ДанныеСБазы.ШтрихкодПодленности = ПОДСТРОКА(ДанныеССайта.qrValue, 0, 8))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСоединенные.НаименованиеПолное,
	|	ДанныеСоединенные.ШтрихкодНоменклатуры,
	|	ДанныеСоединенные.ШтрихкодПодленности,
	|	ДанныеСоединенные.ДатаПроизводства,
	|	ДанныеСоединенные.qrValue
	|ИЗ
	|	ДанныеСоединенные КАК ДанныеСоединенные
	|ГДЕ
	|	ДанныеСоединенные.qrValue ЕСТЬ NULL"
	
КонецФункции

Функция СтрокаЗапросаЗапись(Строка)
	
	НаименованиеПолное = УбратьИзСтрокиЗапрещенныеСимволы(Строка.НаименованиеПолное);
	
	Возврат "INSERT INTO qr (balDate, name, qrValue) VALUES (" 
	+ "'" + Строка.ДатаПроизводства + "'"
	+ ", '" + НаименованиеПолное + "'"
	+ ", '" + Строка.ШтрихкодПодленности + "'"
	+ ")";
	
КонецФункции

Функция СтрокаЗапросаЧтение(ИмяТаблицы)
	
	Возврат "select * from " + ИмяТаблицы + " WHERE balDate = " + ТекущийПериод + " OR balDate = " + ПредыдущийПериод;
	
КонецФункции

Функция УбратьИзСтрокиЗапрещенныеСимволы(НаименованиеПолное)
	
	ЗапрещенныеСимволы = НовыеЗапрещенныеСимволы();
	
	Для Каждого Элемент Из ЗапрещенныеСимволы Цикл
		НаименованиеПолное = СтрЗаменить(НаименованиеПолное, Элемент, "");
	КонецЦикла;
	
	Возврат НаименованиеПолное;
	
КонецФункции

Функция НовыеЗапрещенныеСимволы()
	
	ЗапрещенныеСимволы = Новый Массив;
	ЗапрещенныеСимволы.Добавить("'");
	ЗапрещенныеСимволы.Добавить("/");
	ЗапрещенныеСимволы.Добавить("*");
	ЗапрещенныеСимволы.Добавить("%");
	ЗапрещенныеСимволы.Добавить("_");
	ЗапрещенныеСимволы.Добавить("'");
	
	Возврат ЗапрещенныеСимволы;
	
КонецФункции

#КонецОбласти

#Область Инициализация

Сервер = ""; // IP адрес сайта
ПользовательСервера = ""; // имя пользователя базы данных
ПарольСервера = ""; // пароль пользователя базы данных
БазаСервера = "";  // название SQL базы данных
Год = Формат(ТекущаяДатаСеанса(), "ДФ=yyyy");
ТекущийПериод = Формат(ТекущаяДатаСеанса(), "ДФ=MM") + Год;
ПредыдущийПериод = Формат(ДобавитьМесяц(ТекущаяДатаСеанса(), -1), "ДФ=MM") + Год;

#КонецОбласти